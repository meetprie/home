$(window).on("load",function(){$(".preloader").fadeOut(100)}),$(window).scroll(function(){var e=$(".header");$(window).scrollTop()>=40?e.addClass("fixed-header"):e.removeClass("fixed-header")}),$("#control li").on("click",function(){$(this).addClass("active").siblings().removeClass("active")}),$(".owl-carousel").owlCarousel({loop:!1,margin:10,nav:!0,responsive:{0:{items:1},600:{items:1},1000:{items:1}}}),$(document).ready(function(){$(".clicks").on("click",function(e){if(""!==this.hash){e.preventDefault();var t=this.hash;$("html, body").animate({scrollTop:$(t).offset().top},900,function(){window.location.hash=t})}}),$(window).scroll(function(){var e=$(".sticky");$(window).scrollTop()>=100?e.addClass("fixed"):e.removeClass("fixed")})}),jQuery(document).ready(function(e){var t,n,r=2500,o=3800,a=o-3e3,u=50,s=150,l=500,c=l+800,v=600,f=1500;function d(t){var n=h(t);if(t.parents(".cd-headline").hasClass("type")){var i=t.parent(".cd-words-wrapper");i.addClass("selected").removeClass("waiting"),setTimeout(function(){i.removeClass("selected"),t.removeClass("is-visible").addClass("is-hidden").children("i").removeClass("in").addClass("out")},l),setTimeout(function(){m(n,s)},c)}else if(t.parents(".cd-headline").hasClass("letters")){var f=t.children("i").length>=n.children("i").length;!function t(n,i,o,a){n.removeClass("in").addClass("out");n.is(":last-child")?o&&setTimeout(function(){d(h(i))},r):setTimeout(function(){t(n.next(),i,o,a)},a);if(n.is(":last-child")&&e("html").hasClass("no-csstransitions")){var u=h(i);g(i,u)}}(t.find("i").eq(0),t,f,u),p(n.find("i").eq(0),n,f,u)}else t.parents(".cd-headline").hasClass("clip")?t.parents(".cd-words-wrapper").animate({width:"2px"},v,function(){g(t,n),m(n)}):t.parents(".cd-headline").hasClass("loading-bar")?(t.parents(".cd-words-wrapper").removeClass("is-loading"),g(t,n),setTimeout(function(){d(n)},o),setTimeout(function(){t.parents(".cd-words-wrapper").addClass("is-loading")},a)):(g(t,n),setTimeout(function(){d(n)},r))}function m(e,t){e.parents(".cd-headline").hasClass("type")?(p(e.find("i").eq(0),e,!1,t),e.addClass("is-visible").removeClass("is-hidden")):e.parents(".cd-headline").hasClass("clip")&&e.parents(".cd-words-wrapper").animate({width:e.width()+10},v,function(){setTimeout(function(){d(e)},f)})}function p(e,t,n,i){e.addClass("in").removeClass("out"),e.is(":last-child")?(t.parents(".cd-headline").hasClass("type")&&setTimeout(function(){t.parents(".cd-words-wrapper").addClass("waiting")},200),n||setTimeout(function(){d(t)},r)):setTimeout(function(){p(e.next(),t,n,i)},i)}function h(e){return e.is(":last-child")?e.parent().children().eq(0):e.next()}function g(e,t){e.removeClass("is-visible").addClass("is-hidden"),t.removeClass("is-hidden").addClass("is-visible")}e(".cd-headline.letters").find("b").each(function(){var t=e(this),n=t.text().split(""),r=t.hasClass("is-visible");for(i in n)t.parents(".rotate-2").length>0&&(n[i]="<em>"+n[i]+"</em>"),n[i]=r?'<i class="in">'+n[i]+"</i>":"<i>"+n[i]+"</i>";var o=n.join("");t.html(o).css("opacity",1)}),t=e(".cd-headline"),n=r,t.each(function(){var t=e(this);if(t.hasClass("loading-bar"))n=o,setTimeout(function(){t.find(".cd-words-wrapper").addClass("is-loading")},a);else if(t.hasClass("clip")){var r=t.find(".cd-words-wrapper"),i=r.width()+10;r.css("width",i)}else if(!t.hasClass("type")){var u=t.find(".cd-words-wrapper b"),s=0;u.each(function(){var t=e(this).width();t>s&&(s=t)}),t.find(".cd-words-wrapper").css("width",s)}setTimeout(function(){d(t.find(".is-visible").eq(0))},n)})}),document.addEventListener("DOMContentLoaded",function(){var e=document.querySelectorAll(".progress-bar");e.forEach(function(e){let t=e.children[0],n=e.children[1],r=0,i=t.getAttribute("data-count"),o=n.children[0];setInterval(function(){r<i&&(r++,t.innerHTML=r+"%",o.style.width=r+"%")},1500/i)})}),$(window).scroll(function(){$(this).scrollTop()>=50?$("#return-to-top").fadeIn(200):$("#return-to-top").fadeOut(200)}),$("#return-to-top").click(function(){$("body,html").animate({scrollTop:0},800)});const canvas=document.getElementById("pretty-bg");if(canvas){canvas.width=canvas.clientWidth,canvas.height=canvas.clientHeight;let e={SIM_RESOLUTION:128,DYE_RESOLUTION:512,DENSITY_DISSIPATION:.99,VELOCITY_DISSIPATION:.98,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:20,CURL:20,SPLAT_RADIUS:.8,SHADING:!0,COLORFUL:!0,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!0};function pointerPrototype(){this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}let t=[],n=[];t.push(new pointerPrototype);const{gl:r,ext:i}=getWebGLContext(canvas);function getWebGLContext(e){const t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let n=e.getContext("webgl2",t);const r=!!n;let i,o;r||(n=e.getContext("webgl",t)||e.getContext("experimental-webgl",t)),r?(n.getExtension("EXT_color_buffer_float"),o=n.getExtension("OES_texture_float_linear")):(i=n.getExtension("OES_texture_half_float"),o=n.getExtension("OES_texture_half_float_linear")),n.clearColor(0,0,0,1);const a=r?n.HALF_FLOAT:i.HALF_FLOAT_OES;let u,s,l;return r?(u=getSupportedFormat(n,n.RGBA16F,n.RGBA,a),s=getSupportedFormat(n,n.RG16F,n.RG,a),l=getSupportedFormat(n,n.R16F,n.RED,a)):(u=getSupportedFormat(n,n.RGBA,n.RGBA,a),s=getSupportedFormat(n,n.RGBA,n.RGBA,a),l=getSupportedFormat(n,n.RGBA,n.RGBA,a)),{gl:n,ext:{formatRGBA:u,formatRG:s,formatR:l,halfFloatTexType:a,supportLinearFiltering:o}}}function getSupportedFormat(e,t,n,r){if(!supportRenderTextureFormat(e,t,n,r))switch(t){case e.R16F:return getSupportedFormat(e,e.RG16F,e.RG,r);case e.RG16F:return getSupportedFormat(e,e.RGBA16F,e.RGBA,r);default:return null}return{internalFormat:t,format:n}}function supportRenderTextureFormat(e,t,n,r){let i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,t,4,4,0,n,r,null);let o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}function clamp01(e){return Math.min(Math.max(e,0),1)}function isMobile(){return/Mobi|Android/i.test(navigator.userAgent)}isMobile()&&(e.DYE_RESOLUTION=128,e.SHADING=!1),i.supportLinearFiltering||(e.SHADING=!1);class o{constructor(e,t){if(this.uniforms={},this.program=r.createProgram(),r.attachShader(this.program,e),r.attachShader(this.program,t),r.linkProgram(this.program),!r.getProgramParameter(this.program,r.LINK_STATUS))throw r.getProgramInfoLog(this.program);const n=r.getProgramParameter(this.program,r.ACTIVE_UNIFORMS);for(let e=0;e<n;e++){const t=r.getActiveUniform(this.program,e).name;this.uniforms[t]=r.getUniformLocation(this.program,t)}}bind(){r.useProgram(this.program)}}function compileShader(e,t){const n=r.createShader(e);if(r.shaderSource(n,t),r.compileShader(n),!r.getShaderParameter(n,r.COMPILE_STATUS))throw r.getShaderInfoLog(n);return n}const a=compileShader(r.VERTEX_SHADER,"\n\t    precision highp float;\n\n\t    attribute vec2 aPosition;\n\t    varying vec2 vUv;\n\t    varying vec2 vL;\n\t    varying vec2 vR;\n\t    varying vec2 vT;\n\t    varying vec2 vB;\n\t    uniform vec2 texelSize;\n\n\t    void main () {\n\t        vUv = aPosition * 0.5 + 0.5;\n\t        vL = vUv - vec2(texelSize.x, 0.0);\n\t        vR = vUv + vec2(texelSize.x, 0.0);\n\t        vT = vUv + vec2(0.0, texelSize.y);\n\t        vB = vUv - vec2(0.0, texelSize.y);\n\t        gl_Position = vec4(aPosition, 0.0, 1.0);\n\t    }\n\t"),u=compileShader(r.FRAGMENT_SHADER,"\n\t    precision mediump float;\n\t    precision mediump sampler2D;\n\n\t    varying highp vec2 vUv;\n\t    uniform sampler2D uTexture;\n\t    uniform float value;\n\n\t    void main () {\n\t        gl_FragColor = value * texture2D(uTexture, vUv);\n\t    }\n\t"),s=compileShader(r.FRAGMENT_SHADER,"\n\t    precision mediump float;\n\n\t    uniform vec4 color;\n\n\t    void main () {\n\t        gl_FragColor = color;\n\t    }\n\t"),l=compileShader(r.FRAGMENT_SHADER,"\n\t    precision highp float;\n\t    precision highp sampler2D;\n\n\t    varying vec2 vUv;\n\t    uniform sampler2D uTexture;\n\t    uniform float aspectRatio;\n\n\t    #define SCALE 25.0\n\n\t    void main () {\n\t        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n\t        float v = mod(uv.x + uv.y, 2.0);\n\t        v = v * 0.1 + 0.8;\n\t        gl_FragColor = vec4(vec3(v), 1.0);\n\t    }\n\t"),c=compileShader(r.FRAGMENT_SHADER,"\n\t    precision highp float;\n\t    precision highp sampler2D;\n\n\t    varying vec2 vUv;\n\t    uniform sampler2D uTexture;\n\n\t    void main () {\n\t        vec3 C = texture2D(uTexture, vUv).rgb;\n\t        float a = max(C.r, max(C.g, C.b));\n\t        gl_FragColor = vec4(C, a);\n\t    }\n\t"),v=compileShader(r.FRAGMENT_SHADER,"\n\t    precision highp float;\n\t    precision highp sampler2D;\n\n\t    varying vec2 vUv;\n\t    varying vec2 vL;\n\t    varying vec2 vR;\n\t    varying vec2 vT;\n\t    varying vec2 vB;\n\t    uniform sampler2D uTexture;\n\t    uniform vec2 texelSize;\n\n\t    void main () {\n\t        vec3 L = texture2D(uTexture, vL).rgb;\n\t        vec3 R = texture2D(uTexture, vR).rgb;\n\t        vec3 T = texture2D(uTexture, vT).rgb;\n\t        vec3 B = texture2D(uTexture, vB).rgb;\n\t        vec3 C = texture2D(uTexture, vUv).rgb;\n\n\t        float dx = length(R) - length(L);\n\t        float dy = length(T) - length(B);\n\n\t        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n\t        vec3 l = vec3(0.0, 0.0, 1.0);\n\n\t        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n\t        C.rgb *= diffuse;\n\n\t        float a = max(C.r, max(C.g, C.b));\n\t        gl_FragColor = vec4(C, a);\n\t    }\n\t"),f=compileShader(r.FRAGMENT_SHADER,"\n\t    precision highp float;\n\t    precision highp sampler2D;\n\n\t    varying vec2 vUv;\n\t    uniform sampler2D uTarget;\n\t    uniform float aspectRatio;\n\t    uniform vec3 color;\n\t    uniform vec2 point;\n\t    uniform float radius;\n\n\t    void main () {\n\t        vec2 p = vUv - point.xy;\n\t        p.x *= aspectRatio;\n\t        vec3 splat = exp(-dot(p, p) / radius) * color;\n\t        vec3 base = texture2D(uTarget, vUv).xyz;\n\t        gl_FragColor = vec4(base + splat, 1.0);\n\t    }\n\t"),d=compileShader(r.FRAGMENT_SHADER,"\n\t    precision highp float;\n\t    precision highp sampler2D;\n\n\t    varying vec2 vUv;\n\t    uniform sampler2D uVelocity;\n\t    uniform sampler2D uSource;\n\t    uniform vec2 texelSize;\n\t    uniform vec2 dyeTexelSize;\n\t    uniform float dt;\n\t    uniform float dissipation;\n\n\t    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n\t        vec2 st = uv / tsize - 0.5;\n\n\t        vec2 iuv = floor(st);\n\t        vec2 fuv = fract(st);\n\n\t        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n\t        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n\t        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n\t        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n\t        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n\t    }\n\n\t    void main () {\n\t        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n\t        gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n\t        gl_FragColor.a = 1.0;\n\t    }\n\t"),m=compileShader(r.FRAGMENT_SHADER,"\n\t    precision highp float;\n\t    precision highp sampler2D;\n\n\t    varying vec2 vUv;\n\t    uniform sampler2D uVelocity;\n\t    uniform sampler2D uSource;\n\t    uniform vec2 texelSize;\n\t    uniform float dt;\n\t    uniform float dissipation;\n\n\t    void main () {\n\t        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n\t        gl_FragColor = dissipation * texture2D(uSource, coord);\n\t        gl_FragColor.a = 1.0;\n\t    }\n\t"),p=compileShader(r.FRAGMENT_SHADER,"\n\t    precision mediump float;\n\t    precision mediump sampler2D;\n\n\t    varying highp vec2 vUv;\n\t    varying highp vec2 vL;\n\t    varying highp vec2 vR;\n\t    varying highp vec2 vT;\n\t    varying highp vec2 vB;\n\t    uniform sampler2D uVelocity;\n\n\t    void main () {\n\t        float L = texture2D(uVelocity, vL).x;\n\t        float R = texture2D(uVelocity, vR).x;\n\t        float T = texture2D(uVelocity, vT).y;\n\t        float B = texture2D(uVelocity, vB).y;\n\n\t        vec2 C = texture2D(uVelocity, vUv).xy;\n\t        if (vL.x < 0.0) { L = -C.x; }\n\t        if (vR.x > 1.0) { R = -C.x; }\n\t        if (vT.y > 1.0) { T = -C.y; }\n\t        if (vB.y < 0.0) { B = -C.y; }\n\n\t        float div = 0.5 * (R - L + T - B);\n\t        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n\t    }\n\t"),h=compileShader(r.FRAGMENT_SHADER,"\n\t    precision mediump float;\n\t    precision mediump sampler2D;\n\n\t    varying highp vec2 vUv;\n\t    varying highp vec2 vL;\n\t    varying highp vec2 vR;\n\t    varying highp vec2 vT;\n\t    varying highp vec2 vB;\n\t    uniform sampler2D uVelocity;\n\n\t    void main () {\n\t        float L = texture2D(uVelocity, vL).y;\n\t        float R = texture2D(uVelocity, vR).y;\n\t        float T = texture2D(uVelocity, vT).x;\n\t        float B = texture2D(uVelocity, vB).x;\n\t        float vorticity = R - L - T + B;\n\t        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n\t    }\n\t"),g=compileShader(r.FRAGMENT_SHADER,"\n\t    precision highp float;\n\t    precision highp sampler2D;\n\n\t    varying vec2 vUv;\n\t    varying vec2 vL;\n\t    varying vec2 vR;\n\t    varying vec2 vT;\n\t    varying vec2 vB;\n\t    uniform sampler2D uVelocity;\n\t    uniform sampler2D uCurl;\n\t    uniform float curl;\n\t    uniform float dt;\n\n\t    void main () {\n\t        float L = texture2D(uCurl, vL).x;\n\t        float R = texture2D(uCurl, vR).x;\n\t        float T = texture2D(uCurl, vT).x;\n\t        float B = texture2D(uCurl, vB).x;\n\t        float C = texture2D(uCurl, vUv).x;\n\n\t        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n\t        force /= length(force) + 0.0001;\n\t        force *= curl * C;\n\t        force.y *= -1.0;\n\n\t        vec2 vel = texture2D(uVelocity, vUv).xy;\n\t        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n\t    }\n\t"),T=compileShader(r.FRAGMENT_SHADER,"\n\t    precision mediump float;\n\t    precision mediump sampler2D;\n\n\t    varying highp vec2 vUv;\n\t    varying highp vec2 vL;\n\t    varying highp vec2 vR;\n\t    varying highp vec2 vT;\n\t    varying highp vec2 vB;\n\t    uniform sampler2D uPressure;\n\t    uniform sampler2D uDivergence;\n\n\t    vec2 boundary (vec2 uv) {\n\t        return uv;\n\t        // uncomment if you use wrap or repeat texture mode\n\t        // uv = min(max(uv, 0.0), 1.0);\n\t        // return uv;\n\t    }\n\n\t    void main () {\n\t        float L = texture2D(uPressure, boundary(vL)).x;\n\t        float R = texture2D(uPressure, boundary(vR)).x;\n\t        float T = texture2D(uPressure, boundary(vT)).x;\n\t        float B = texture2D(uPressure, boundary(vB)).x;\n\t        float C = texture2D(uPressure, vUv).x;\n\t        float divergence = texture2D(uDivergence, vUv).x;\n\t        float pressure = (L + R + B + T - divergence) * 0.25;\n\t        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n\t    }\n\t"),x=compileShader(r.FRAGMENT_SHADER,"\n\t    precision mediump float;\n\t    precision mediump sampler2D;\n\n\t    varying highp vec2 vUv;\n\t    varying highp vec2 vL;\n\t    varying highp vec2 vR;\n\t    varying highp vec2 vT;\n\t    varying highp vec2 vB;\n\t    uniform sampler2D uPressure;\n\t    uniform sampler2D uVelocity;\n\n\t    vec2 boundary (vec2 uv) {\n\t        return uv;\n\t        // uv = min(max(uv, 0.0), 1.0);\n\t        // return uv;\n\t    }\n\n\t    void main () {\n\t        float L = texture2D(uPressure, boundary(vL)).x;\n\t        float R = texture2D(uPressure, boundary(vR)).x;\n\t        float T = texture2D(uPressure, boundary(vT)).x;\n\t        float B = texture2D(uPressure, boundary(vB)).x;\n\t        vec2 velocity = texture2D(uVelocity, vUv).xy;\n\t        velocity.xy -= vec2(R - L, T - B);\n\t        gl_FragColor = vec4(velocity, 0.0, 1.0);\n\t    }\n\t"),R=(()=>(r.bindBuffer(r.ARRAY_BUFFER,r.createBuffer()),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),r.STATIC_DRAW),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,r.createBuffer()),r.bufferData(r.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),r.STATIC_DRAW),r.vertexAttribPointer(0,2,r.FLOAT,!1,0,0),r.enableVertexAttribArray(0),e=>{r.bindFramebuffer(r.FRAMEBUFFER,e),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0)}))();let E,y,S,D,A,_,w,F,b;const C=new o(a,u),U=new o(a,s),L=new o(a,l),I=new o(a,c),B=new o(a,v),P=new o(a,f),N=new o(a,i.supportLinearFiltering?m:d),O=new o(a,p),M=new o(a,h),G=new o(a,g),X=new o(a,T),z=new o(a,x);function initFramebuffers(){let t=getResolution(e.SIM_RESOLUTION),n=getResolution(e.DYE_RESOLUTION);E=t.width,y=t.height,S=n.width,D=n.height;const o=i.halfFloatTexType,a=i.formatRGBA,u=i.formatRG,s=i.formatR;A=createDoubleFBO(2,S,D,a.internalFormat,a.format,o,i.supportLinearFiltering?r.LINEAR:r.NEAREST),_=createDoubleFBO(0,E,y,u.internalFormat,u.format,o,i.supportLinearFiltering?r.LINEAR:r.NEAREST),w=createFBO(4,E,y,s.internalFormat,s.format,o,r.NEAREST),F=createFBO(5,E,y,s.internalFormat,s.format,o,r.NEAREST),b=createDoubleFBO(6,E,y,s.internalFormat,s.format,o,r.NEAREST)}function getResolution(e){let t=r.drawingBufferWidth/r.drawingBufferHeight;t<1&&(t=1/t);let n=Math.round(e*t),i=Math.round(e);return r.drawingBufferWidth>r.drawingBufferHeight?{width:n,height:i}:{width:i,height:n}}function createFBO(e,t,n,i,o,a,u){r.activeTexture(r.TEXTURE0+e);let s=r.createTexture();r.bindTexture(r.TEXTURE_2D,s),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,u),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,u),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texImage2D(r.TEXTURE_2D,0,i,t,n,0,o,a,null);let l=r.createFramebuffer();return r.bindFramebuffer(r.FRAMEBUFFER,l),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,s,0),r.viewport(0,0,t,n),r.clear(r.COLOR_BUFFER_BIT),{texture:s,fbo:l,texId:e}}function createDoubleFBO(e,t,n,r,i,o,a){let u=createFBO(e,t,n,r,i,o,a),s=createFBO(e+1,t,n,r,i,o,a);return{get read(){return u},get write(){return s},swap(){let e=u;u=s,s=e}}}initFramebuffers();let H=Date.now();function update(){resizeCanvas(),input(),e.PAUSED||step(.016),render(null),requestAnimationFrame(update)}function input(){n.length>0&&multipleSplats(n.pop());for(let e=0;e<t.length;e++){const n=t[e];n.moved&&(splat(n.x,n.y,n.dx,n.dy,n.color),n.moved=!1)}if(e.COLORFUL&&H+100<Date.now()){H=Date.now();for(let e=0;e<t.length;e++){t[e].color=generateColor()}}}function step(t){r.disable(r.BLEND),r.viewport(0,0,E,y),M.bind(),r.uniform2f(M.uniforms.texelSize,1/E,1/y),r.uniform1i(M.uniforms.uVelocity,_.read.texId),R(F.fbo),G.bind(),r.uniform2f(G.uniforms.texelSize,1/E,1/y),r.uniform1i(G.uniforms.uVelocity,_.read.texId),r.uniform1i(G.uniforms.uCurl,F.texId),r.uniform1f(G.uniforms.curl,e.CURL),r.uniform1f(G.uniforms.dt,t),R(_.write.fbo),_.swap(),O.bind(),r.uniform2f(O.uniforms.texelSize,1/E,1/y),r.uniform1i(O.uniforms.uVelocity,_.read.texId),R(w.fbo),C.bind();let n=b.read.texId;r.activeTexture(r.TEXTURE0+n),r.bindTexture(r.TEXTURE_2D,b.read.texture),r.uniform1i(C.uniforms.uTexture,n),r.uniform1f(C.uniforms.value,e.PRESSURE_DISSIPATION),R(b.write.fbo),b.swap(),X.bind(),r.uniform2f(X.uniforms.texelSize,1/E,1/y),r.uniform1i(X.uniforms.uDivergence,w.texId),n=b.read.texId,r.uniform1i(X.uniforms.uPressure,n),r.activeTexture(r.TEXTURE0+n);for(let t=0;t<e.PRESSURE_ITERATIONS;t++)r.bindTexture(r.TEXTURE_2D,b.read.texture),R(b.write.fbo),b.swap();z.bind(),r.uniform2f(z.uniforms.texelSize,1/E,1/y),r.uniform1i(z.uniforms.uPressure,b.read.texId),r.uniform1i(z.uniforms.uVelocity,_.read.texId),R(_.write.fbo),_.swap(),N.bind(),r.uniform2f(N.uniforms.texelSize,1/E,1/y),i.supportLinearFiltering||r.uniform2f(N.uniforms.dyeTexelSize,1/E,1/y),r.uniform1i(N.uniforms.uVelocity,_.read.texId),r.uniform1i(N.uniforms.uSource,_.read.texId),r.uniform1f(N.uniforms.dt,t),r.uniform1f(N.uniforms.dissipation,e.VELOCITY_DISSIPATION),R(_.write.fbo),_.swap(),r.viewport(0,0,S,D),i.supportLinearFiltering||r.uniform2f(N.uniforms.dyeTexelSize,1/S,1/D),r.uniform1i(N.uniforms.uVelocity,_.read.texId),r.uniform1i(N.uniforms.uSource,A.read.texId),r.uniform1f(N.uniforms.dissipation,e.DENSITY_DISSIPATION),R(A.write.fbo),A.swap()}function render(t){null!=t&&e.TRANSPARENT?r.disable(r.BLEND):(r.blendFunc(r.ONE,r.ONE_MINUS_SRC_ALPHA),r.enable(r.BLEND));let n=null==t?r.drawingBufferWidth:S,i=null==t?r.drawingBufferHeight:D;if(r.viewport(0,0,n,i),!e.TRANSPARENT){U.bind();let n=e.BACK_COLOR;r.uniform4f(U.uniforms.color,n.r/255,n.g/255,n.b/255,1),R(t)}null==t&&e.TRANSPARENT&&L.bind(),e.SHADING?(B.bind(),r.uniform2f(B.uniforms.texelSize,1/n,1/i),r.uniform1i(B.uniforms.uTexture,A.read.texId)):(I.bind(),r.uniform1i(I.uniforms.uTexture,A.read.texId)),R(t)}function splat(t,n,i,o,a){r.viewport(0,0,E,y),P.bind(),r.uniform1i(P.uniforms.uTarget,_.read.texId),r.uniform1f(P.uniforms.aspectRatio,canvas.width/canvas.height),r.uniform2f(P.uniforms.point,t/canvas.width,1-n/canvas.height),r.uniform3f(P.uniforms.color,i,-o,1),r.uniform1f(P.uniforms.radius,e.SPLAT_RADIUS/100),R(_.write.fbo),_.swap(),r.viewport(0,0,S,D),r.uniform1i(P.uniforms.uTarget,A.read.texId),r.uniform3f(P.uniforms.color,a.r,a.g,a.b),R(A.write.fbo),A.swap()}function multipleSplats(e,t=!1){for(let a=0;a<e;a++){const e=generateColor();e.r*=10,e.g*=10,e.b*=10;var n=canvas.width*Math.random(),r=canvas.height*Math.random(),i=1e3*(Math.random()-.5),o=1e3*(Math.random()-.5);t&&(n=canvas.width/2,r=canvas.height/2,i=1e3*(Math.random()-.5),o=1e3*(Math.random()-.5)),splat(n,r,i,o,e)}}function resizeCanvas(){canvas.width==canvas.clientWidth&&canvas.height==canvas.clientHeight||(canvas.width=canvas.clientWidth,canvas.height=canvas.clientHeight,initFramebuffers())}update();var my_dx=0,my_dy=0,my_color=generateColor();function generateColor(){let e=HSVtoRGB(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function getRandomInt(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1))+e}function HSVtoRGB(e,t,n){let r,i,o,a,u,s,l,c;switch(s=n*(1-t),l=n*(1-(u=6*e-(a=Math.floor(6*e)))*t),c=n*(1-(1-u)*t),a%6){case 0:r=n,i=c,o=s;break;case 1:r=l,i=n,o=s;break;case 2:r=s,i=n,o=c;break;case 3:r=s,i=l,o=n;break;case 4:r=c,i=s,o=n;break;case 5:r=n,i=s,o=l}return{r:r,g:i,b:o}}canvas.addEventListener("mousemove",e=>{splat(e.offsetX,e.offsetY,5*(e.offsetX-my_dx),5*(e.offsetY-my_dy),my_color),my_dx=e.offsetX,my_dy=e.offsetY}),setInterval(function(){my_color=generateColor()},500),canvas.addEventListener("touchmove",e=>{e.preventDefault();const n=e.targetTouches;for(let e=0;e<n.length;e++){let r=t[e];r.moved=r.down,r.dx=8*(n[e].pageX-r.x),r.dy=8*(n[e].pageY-r.y),r.x=n[e].pageX,r.y=n[e].pageY}},!1),canvas.addEventListener("touchstart",e=>{e.preventDefault();const n=e.targetTouches;for(let e=0;e<n.length;e++)e>=t.length&&t.push(new pointerPrototype),t[e].id=n[e].identifier,t[e].down=!0,t[e].x=n[e].pageX,t[e].y=n[e].pageY,t[e].color=generateColor()}),window.addEventListener("mouseup",()=>{t[0].down=!1}),window.addEventListener("touchend",e=>{const n=e.changedTouches;for(let e=0;e<n.length;e++)for(let r=0;r<t.length;r++)n[e].identifier==t[r].id&&(t[r].down=!1)}),window.addEventListener("keydown",t=>{"p"===t.key&&(e.PAUSED=!e.PAUSED)})}